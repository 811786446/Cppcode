#include<stdio.h>
//15
//00000000000000000000000000001111
//00000000000000000000000000000001

//1.写一个函数返回参数二进制中 1 的个数 
//int count_one_bits(unsigned int value)
//{
//	int count = 0;
//	int i = 0;
	//for(i=0; i<32; i++)
	//{
	//	if((value>>i)&1 == 1)
	//	{
	//		count++;
	//	}
	//}

//		
//	
//	return count;
//}
//int main()
//{
//	unsigned int value = 0;
//	int ret = 0;
//	scanf("%d",&value);
//	ret = count_one_bits(value);
//	printf("%d\n",ret);
//	return 0;
//}


//2.获取一个数二进制序列中所有的偶数位和奇数位，分别输出二进制序列
//
//int main()
//{
//	int value = 0;
//	int num = 0;
//	int i = 0,k = 0;
//	scanf("%d",&value);
//	printf("偶数序列：");
//	for(i=1; i<32; i+=2)
//	{
//		num = (value>>i) & 1;
//		printf("%d",num);
//	}
//	printf("\n");
//	printf("奇数序列：");
//	for(i=0; i<32; i+=2)
//	{
//		num = (value>>i) & 1;
//		printf("%d",num);
//	}
//	printf("\n");
//	return 0;
//}

//3. 输出一个整数的每一位
//void _print(int num)
//{
//	if(num > 9)
//	{
//		_print(num/10);
//		printf("%d ",num%10);
//	}
//	else
//	{
//		printf("%d ",num);
//	}
//}
//
//int main()
//{
//	int num = 0;
//	scanf("%d",&num);
//	_print(num);
//	return 0;
//}

//4.编程实现： 两个int（32位）整数m和n的二进制表达中，有多少个位(bit)不同？

// ^ 异或运算符同为0，异为1

int main()
{
	int a = 0;
	int b = 0;
	int tmp = 0;
 	int i = 0;
	int count = 0;
	printf("请输入两个数：\n");
	scanf("%d%d",&a,&b);
	tmp = a^b;
	while(i<32)
	{
		if((tmp>>i) == 1)
		{
			count++;
		}
		i++;
	}
	printf("有%d个位不同\n",count);
	return 0;
}

